name: Build & Release Alpha

on:
  push:
    branches:
      - alpha-releases  # Runs on every push to alpha-releases
  workflow_dispatch: # Allows manual runs

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java (Amazon Corretto)
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '23' # Match your target Java version

      - name: Bump Version
        run: |
          VERSION_FILE="gradle.properties"
          PLUGIN_FILE="src/main/resources/paper-plugin.yml"

          # Extract current version (assumes version=x.x.x format)
          CURRENT_VERSION=$(grep "^version=" $VERSION_FILE | cut -d'=' -f2)
          BASE_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{print $1"."$2}')
          PATCH_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{print $3+1}')
          NEW_VERSION="${BASE_VERSION}.${PATCH_VERSION}"

          # Update gradle.properties
          sed -i "s/^version=.*/version=${NEW_VERSION}/" $VERSION_FILE

          # Update paper-plugin.yml
          sed -i "s/^version:.*/version: ${NEW_VERSION}/" $PLUGIN_FILE

          # Commit the version bump
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add $VERSION_FILE $PLUGIN_FILE
          git commit -m "Bump version to ${NEW_VERSION}"

          # Use PAT to push changes
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git HEAD:alpha-releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Grant Execute Permissions for Gradlew
        run: chmod +x gradlew

      - name: Build with Gradle ShadowJar
        run: ./gradlew shadowJar

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: essentials-beta
          path: build/libs/*.jar

      - name: Get Commit Hash
        id: vars
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create Alpha Pre-Release
        run: |
          gh release create "0.0.2:${{ env.COMMIT_SHA }}" build/libs/*.jar \
            --title "Alpha Build 0.0.2:${{ env.COMMIT_SHA }}" \
            --notes "Automated alpha release from commit ${{ env.COMMIT_SHA }}" \
            --prerelease \
            --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
