name: Build & Release Alpha

on:
  push:
    branches:
      - alpha-releases  # Runs on every push to alpha-releases
  workflow_dispatch: # Allows manual runs

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set Up Java (Amazon Corretto)
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '23'

      - name: Bump Version
        run: |
          VERSION_FILE="gradle.properties"
          PLUGIN_FILE="src/main/resources/paper-plugin.yml"

          CURRENT_VERSION=$(awk -F= '/^version=/ {print $2}' $VERSION_FILE)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{print $1"."$2"."$3+1}')

          if [ "$CURRENT_VERSION" = "$NEW_VERSION" ]; then
            echo "No version change detected, forcing increment..."
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{print $1"."$2"."$3+1}')
          fi

          sed -i "s/^version=.*/version=${NEW_VERSION}/" $VERSION_FILE
          sed -i "s/^version:.*/version: ${NEW_VERSION}/" $PLUGIN_FILE

          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add $VERSION_FILE $PLUGIN_FILE

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Bump version to ${NEW_VERSION}"
            git push https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git HEAD:alpha-releases
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Gradle ShadowJar
        run: ./gradlew --build-cache --parallel shadowJar

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: essentials-beta
          path: build/libs/*.jar

      - name: Get Commit Hash
        id: vars
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create Alpha Pre-Release
        run: |
          TAG_NAME="0.0.2-${{ env.COMMIT_SHA }}"
          gh release create "$TAG_NAME" build/libs/*.jar \
            --title "Alpha Build $TAG_NAME" \
            --notes "Automated alpha release from commit ${{ env.COMMIT_SHA }}" \
            --prerelease --draft --repo ${{ github.repository }} &
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
